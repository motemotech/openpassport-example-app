import { ConnectButton } from '@rainbow-me/rainbowkit';
import type { NextPage } from 'next';
import Head from 'next/head';
import { useState } from 'react';
import styles from '../styles/Home.module.css';
import { useAccount } from 'wagmi';
import { usePublicClient, useWalletClient } from 'wagmi';
import { getBoilerplateContract } from '../utils/contract';

const Home: NextPage = () => {
  const { address, isConnected } = useAccount();
  const publicClient = usePublicClient();
  const { data: walletClient } = useWalletClient();
  const [minting, setMinting] = useState(false);
  const [txHash, setTxHash] = useState<string | null>(null);
  const [error, setError] = useState<string | null>(null);
  const [attestation, setAttestation] = useState<string>('');

  const handleMint = async () => {
    if (!isConnected || !walletClient) {
      setError('Please connect your wallet!');
      return;
    }

    if (!attestation) {
      setError('Please enter an attestation.');
      return;
    }

    setMinting(true);
    setError(null);
    setTxHash(null);

    try {
      const contract = getBoilerplateContract();

      const parsedAttestation = JSON.parse(attestation);

      const tx = await walletClient.writeContract({
        ...contract,
        functionName: 'mint',
        args: [parsedAttestation],
      });

      setTxHash(tx);
      setMinting(false);
    } catch (err: any) {
      setError(err.message || 'failed to mint');
      setMinting(false);
    }
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>RainbowKit App with Viem</title>
        <meta
          content="Generated by @rainbow-me/create-rainbowkit"
          name="description"
        />
        <link href="/favicon.ico" rel="icon" />
      </Head>

      <main className={styles.main}>
        <ConnectButton />

        <h1 className={styles.title}>
          Welcome to <a href="https://www.openpassport.app/">OpenPassport</a> Example App!
        </h1>

        <div className={styles.inputContainer}>
          <label
            htmlFor="attestation"
            style={{ display: 'block', marginBottom: '0.5rem', fontWeight: 'bold' }}
          >
            Attestation:
          </label>
          <textarea
            id="attestation"
            value={attestation}
            onChange={(e) => setAttestation(e.target.value)}
            rows={10}
            cols={50}
            className={styles.textarea}
          />
        </div>

        <button onClick={handleMint} disabled={minting} className={styles.button}>
          {minting ? 'Minting...' : 'Mint NFT'}
        </button>

        {txHash && (
          <p>
            Success!{' '}
            <a
              href={`https://sepolia.etherscan.io/tx/${txHash}`}
              target="_blank"
              rel="noopener noreferrer"
            >
              Check on Etherscan
            </a>
          </p>
        )}

        {error && <p className={styles.error}>{error}</p>}
      </main>

      <footer className={styles.footer}>
        <a href="https://rainbow.me" rel="noopener noreferrer" target="_blank">
          Made with ‚ù§Ô∏è by your frens at üåà
        </a>
      </footer>
    </div>
  );
};

export default Home;